{"version":3,"sources":["images/logo.png","components/Header.jsx","redux/actions/actionTypes.js","api/apiUtils.js","redux/actions/movieActions.js","api/searchApi.js","images/poster.jpg","components/MovieCard.jsx","components/Banner.jsx","components/Search.jsx","components/MovieDetails.jsx","components/Results.jsx","components/Footer.jsx","App.js","redux/reducers/initialState.js","redux/reducers/index.js","redux/reducers/movieReducer.js","index.js","redux/configureStore.js"],"names":["Header","className","src","logo","alt","SET_SEARCH_RESULTS","SET_SEARCH_FAILURE","SET_NOMINEES","handleResponse","response","a","ok","json","status","text","error","Error","handleError","console","setNominees","nominees","type","types","loadMovies","title","dispatch","fetch","process","then","catch","searchApi","movies","errorMessage","Response","searchResults","mapDispatch","connect","movieReducer","nominee","handleClick","updatedNominees","filter","nom","imdbID","window","localStorage","setItem","JSON","stringify","id","Poster","poster","Title","Year","onClick","style","display","justifyContent","alignItems","useState","isLoading","setIsLoading","useEffect","getItem","parse","Dimmer","active","Loader","height","length","Message","success","header","content","textAlign","map","index","Placeholder","inverted","width","margin","Image","input","setInput","onSubmit","e","preventDefault","searchBar","FormData","target","get","Input","action","icon","color","labelPosition","fluid","placeholder","name","MovieDetails","movie","setMovie","res","data","flexDirection","Director","Actors","Plot","imdbRating","activeIndex","setActiveIndex","Segment","minHeight","result","Accordion","Icon","size","spaced","marginTop","Button","circular","disabled","some","nominateMovie","Content","Divider","Footer","App","initialState","rootReducer","combineReducers","state","Search","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutableStateInvariant","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.175b4083.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.44f20ece.png\";","import logo from \"../images/logo.png\";\n\nexport default function Header() {\n  return (\n    <header className=\"center\">\n      <img src={logo} alt=\"\" />\n      <h1>The Shoppies - Movie Awards for Entrepreneurs</h1>\n    </header>\n  );\n}\n","export const SET_SEARCH_RESULTS = \"SET_SEARCH_RESULTS\";\r\n\r\nexport const SET_SEARCH_FAILURE = \"SET_SEARCH_FAILURE\";\r\n\r\nexport const SET_NOMINEES = \"SET_NOMINEES\";\r\n","export async function handleResponse(response) {\r\n  if (response.ok) return response.json();\r\n  if (response.status === 400) {\r\n    // Server side validation returns a string error message\r\n    const error = await response.text();\r\n    throw new Error(error);\r\n  }\r\n  throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\n// In a real app, would likely call an error logging service\r\nexport function handleError(error) {\r\n  // eslint-disable-next-line no-console\r\n  console.error(\"API call failed. \" + error);\r\n  throw error;\r\n}\r\n","import * as types from \"./actionTypes\";\r\nimport * as searchApi from \"../../api/searchApi\";\r\n\r\nexport function setSearchResults(searchTerm, searchResults) {\r\n  return { type: types.SET_SEARCH_RESULTS, searchResults };\r\n}\r\n\r\nexport function setSearchFailure(errorMessage) {\r\n  return { type: types.SET_SEARCH_FAILURE, errorMessage };\r\n}\r\n\r\nexport function setNominees(nominees) {\r\n  return { type: types.SET_NOMINEES, nominees };\r\n}\r\n\r\nexport function loadMovies(title) {\r\n  return function (dispatch) {\r\n    return searchApi\r\n      .getMovies(title)\r\n      .then(movies => {\r\n        if (movies.Response !== \"False\")\r\n          dispatch(setSearchResults(title, movies));\r\n        else dispatch(setSearchFailure(movies.Error));\r\n      })\r\n      .catch(error => {\r\n        throw error;\r\n      });\r\n  };\r\n}\r\n","import { handleResponse, handleError } from \"./apiUtils\";\r\n\r\nexport function getMovies(title) {\r\n  return fetch(\r\n    `https://www.omdbapi.com/?s=${title}&apikey=${process.env.REACT_APP_OMDB_API_KEY}`\r\n  )\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/poster.a0e63666.jpg\";","import { connect } from \"react-redux\";\nimport { setNominees } from \"../redux/actions/movieActions\";\n\nimport poster from \"../images/poster.jpg\";\n\nfunction MovieCard({ nominee, nominees, setNominees }) {\n  function handleClick() {\n    const updatedNominees = nominees.filter(\n      nom => nom.imdbID !== nominee.imdbID\n    );\n    setNominees(updatedNominees);\n    window.localStorage.setItem(\"nominees\", JSON.stringify(updatedNominees));\n  }\n\n  return (\n    <>\n      <div id=\"nmf\" className=\"card\">\n        <div className=\"card-inner\">\n          <div className=\"card-front\">\n            <img\n              src={nominee.Poster ? nominee.Poster : poster}\n              alt=\"movie poster\"\n            />\n          </div>\n          <div className=\"card-back\">\n            <div>\n              <h2>{nominee.Title}</h2>\n              <h3>{nominee.Year}</h3>\n            </div>\n            <button className=\"btn\" onClick={handleClick}>\n              Remove\n            </button>\n          </div>\n        </div>\n      </div>\n      <ul id=\"mf\">\n        <li\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n          }}\n        >\n          {nominee.Title} - {nominee.Year}\n          <button className=\"btn\" onClick={handleClick}>\n            Remove\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n}\n\nfunction mapState({ movieReducer: { nominees } }) {\n  return {\n    nominees,\n  };\n}\n\nconst mapDispatch = {\n  setNominees,\n};\n\nexport default connect(mapState, mapDispatch)(MovieCard);\n","import { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setNominees } from \"../redux/actions/movieActions\";\n\nimport MovieCard from \"./MovieCard\";\n\nimport { Dimmer, Loader, Message, Placeholder } from \"semantic-ui-react\";\n\nfunction Banner({ nominees, setNominees }) {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    let nominees = window.localStorage.getItem(\"nominees\");\n    nominees = JSON.parse(nominees);\n    if (nominees) setNominees(nominees);\n    setIsLoading(false);\n    // eslint-disable-next-line\n  }, []); // it is OK in this use case to leave the array empty\n\n  return isLoading ? (\n    <Dimmer active>\n      <Loader />\n    </Dimmer>\n  ) : (\n    <>\n      <div style={{ height: \"100px\" }}>\n        {nominees.length >= 5 && (\n          <Message\n            success\n            header=\"Thank you for choosing your nominees!\"\n            content=\"Should you decide to change your list, simply remove the existing nominees to add new ones.\"\n          />\n        )}\n        {nominees.length === 0 && (\n          <h1 style={{ textAlign: \"center\" }}>\n            USE THE SEARCHBAR TO FIND MOVIES!\n          </h1>\n        )}\n      </div>\n      <div className=\"banner\">\n        <section className=\"cards\">\n          {[0, 1, 2, 3, 4].map(index =>\n            nominees[index] ? (\n              <MovieCard\n                key={index + nominees[index].imdbID}\n                nominee={nominees[index]}\n              />\n            ) : (\n              <Placeholder\n                key={index + \"placeholder\"}\n                id=\"nmf\"\n                inverted\n                style={{\n                  height: \"300px\",\n                  width: \"200px\",\n                  margin: \"0\",\n                }}\n              >\n                <Placeholder.Image />\n              </Placeholder>\n            )\n          )}\n        </section>\n      </div>\n    </>\n  );\n}\n\nfunction mapState({ movieReducer: { nominees } }) {\n  return {\n    nominees,\n  };\n}\n\nconst mapDispatch = {\n  setNominees,\n};\n\nexport default connect(mapState, mapDispatch)(Banner);\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { loadMovies } from \"../redux/actions/movieActions\";\n\nimport { Input } from \"semantic-ui-react\";\n\nfunction Search({ loadMovies }) {\n  const [input, setInput] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const searchBar = new FormData(e.target).get(\"searchBar\");\n    if (!searchBar || searchBar === input) return;\n\n    setInput(searchBar);\n    loadMovies(searchBar);\n  }\n\n  return (\n    <section>\n      <h2 style={{ textAlign: \"center\" }}>Choose 5 movies to Nominate!</h2>\n      <form onSubmit={handleSubmit}>\n        <Input\n          action={{\n            icon: \"search\",\n            color: \"green\",\n            content: \"Search\",\n            labelPosition: \"right\",\n          }}\n          fluid\n          placeholder=\"Search movies by title\"\n          name=\"searchBar\"\n        />\n      </form>\n    </section>\n  );\n}\n\nfunction mapState() {\n  return {};\n}\n\nconst mapDispatch = {\n  loadMovies,\n};\n\nexport default connect(mapState, mapDispatch)(Search);\n","import { useState, useEffect } from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nexport default function MovieDetails({ imdbID }) {\r\n  const [movie, setMovie] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://www.omdbapi.com/?i=${imdbID}&apikey=${process.env.REACT_APP_OMDB_API_KEY}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => setMovie(data));\r\n    setIsLoading(false);\r\n  }, [imdbID]);\r\n\r\n  return isLoading ? (\r\n    <Dimmer active>\r\n      <Loader />\r\n    </Dimmer>\r\n  ) : (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n      <h3>\r\n        <b>Director:</b> {movie.Director}\r\n      </h3>\r\n      <h3>\r\n        <b>Actors:</b> {movie.Actors}\r\n      </h3>\r\n      <h3>\r\n        <b>Plot:</b> {movie.Plot}\r\n      </h3>\r\n      <h3>\r\n        <b>IMDB Rating:</b> {movie.imdbRating}\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setNominees, loadMovies } from \"../redux/actions/movieActions\";\nimport MovieDetails from \"./MovieDetails\";\nimport poster from \"../images/poster.jpg\";\n\nimport {\n  Accordion,\n  Icon,\n  Segment,\n  Button,\n  Image,\n  Divider,\n} from \"semantic-ui-react\";\n\nfunction Results({ searchResults, nominees, setNominees, loadMovies }) {\n  const [activeIndex, setActiveIndex] = useState(-1);\n\n  function nominateMovie(result) {\n    const updatedNominees = [...nominees, result];\n    setNominees(updatedNominees);\n    window.localStorage.setItem(\"nominees\", JSON.stringify(updatedNominees));\n  }\n\n  return (\n    <Segment inverted style={{ minHeight: \"500px\" }}>\n      {searchResults[0] !== \"Movie not found!\" ? (\n        searchResults.map((result, index) => (\n          <Accordion inverted fluid key={index + result.imdbID}>\n            <Accordion.Title active={activeIndex === index} index={index}>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Icon\n                    size=\"large\"\n                    onClick={() =>\n                      setActiveIndex(activeIndex === index ? -1 : index)\n                    }\n                    name={\n                      activeIndex === index ? \"chevron down\" : \"chevron right\"\n                    }\n                  />\n                  {\n                    <Image\n                      id=\"nmf\"\n                      src={result.Poster ? result.Poster : poster}\n                      alt=\"movie poster\"\n                      size={activeIndex === index ? \"medium\" : \"tiny\"}\n                      spaced=\"right\"\n                    />\n                  }\n                  <Segment inverted style={{ marginTop: \"0\" }}>\n                    <h3>\n                      {result.Title} - {result.Year}\n                    </h3>\n                    {activeIndex === index && (\n                      <MovieDetails imdbID={result.imdbID} />\n                    )}\n                  </Segment>\n                </div>\n                <Button\n                  size=\"medium\"\n                  circular\n                  inverted\n                  color=\"green\"\n                  content={\"Nominate\"}\n                  disabled={\n                    nominees.some(\n                      nominee => nominee.imdbID === result.imdbID\n                    ) || nominees.length >= 5\n                  }\n                  onClick={() => nominateMovie(result)}\n                />\n              </div>\n            </Accordion.Title>\n            <Accordion.Content\n              active={activeIndex === index}\n              className=\"expand\"\n            ></Accordion.Content>\n            <Divider inverted />\n          </Accordion>\n        ))\n      ) : (\n        <h3>{searchResults[0]}</h3>\n      )}\n    </Segment>\n  );\n}\n\nfunction mapState({ movieReducer: { nominees, searchResults } }) {\n  return {\n    searchResults,\n    nominees,\n  };\n}\n\nconst mapDispatch = {\n  setNominees,\n  loadMovies,\n};\n\nexport default connect(mapState, mapDispatch)(Results);\n","export default function Footer() {\r\n  return (\r\n    <footer style={{ textAlign: \"center\" }}>\r\n      <small>© omdbapi.com</small>\r\n    </footer>\r\n  );\r\n}\r\n","import Header from \"./components/Header\";\nimport Banner from \"./components/Banner\";\nimport Search from \"./components/Search\";\nimport Results from \"./components/Results\";\nimport Footer from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Banner />\n      <Search />\n      <Results />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n  searchResults: [],\r\n  nominees: [],\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport movieReducer from \"./movieReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  movieReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { initialState } from \"./initialState\";\r\nimport * as types from \"../actions/actionTypes\";\r\n\r\nexport default function movieReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.SET_SEARCH_RESULTS:\r\n      return { ...state, searchResults: [...action.searchResults.Search] };\r\n\r\n    case types.SET_SEARCH_FAILURE:\r\n      return { ...state, searchResults: [action.errorMessage] };\r\n\r\n    case types.SET_NOMINEES:\r\n      return { ...state, nominees: action.nominees };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider } from \"react-redux\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./App.css\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // add support for Redux dev tools\r\n\r\n  return createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(thunk, reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}